{"version":3,"sources":["app/client.cljs"],"mappings":"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","names":["js/app","js/app.client","js/app.client.app","app.client/app","com.fulcrologic.fulcro.application.fulcro_app","app.client/cards","options__46026__auto__","com.fulcrologic.fulcro.components/wrapped-render","map__50153","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/app.client.Card","props__46027__auto__","this__46028__auto__","temp__5733__auto__","init-state__46029__auto__","obj50156","G__50157","G__50158","goog.object/get","obj50160","com.fulcrologic.fulcro.components/configure-component!","app.client/Card","this","title","message","com.fulcrologic.fulcro.dom.macro_create_element","app.client/card-ui","com.fulcrologic.fulcro.components.factory","js/app.client.Root","obj50166","G__50167","G__50168","obj50170","app.client/Root","props","com.fulcrologic.fulcro.dom/macro-create-element*","com.fulcrologic.fulcro.components/force-children","cljs.core.doall","iter__4523__auto__","s__50162","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","cljs.core/count","b__50164","cljs.core/chunk-buffer","i__50163","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__50161","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","card","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_","js/console.log","app.client/refresh","com.fulcrologic.fulcro.components.refresh_dynamic_queries_BANG_","cljs.core/chunk-first"],"sourcesContent":["(ns app.client\n  (:require\n    [com.fulcrologic.fulcro.application :as app]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom]))\n\n(defonce app (app/fulcro-app))\n\n(def cards\n  [{:title   \"Hello\"\n    :message \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"}\n   {:title   \"Hello\"\n    :message \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"}\n   {:title   \"Hello\"\n    :message \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"}\n   {:title   \"Hello\"\n    :message \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"}\n   {:title   \"Hello\"\n    :message \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"}\n   {:title   \"Hello\"\n    :message \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"}\n   {:title   \"Hello\"\n    :message \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"}])\n\n\n(defsc Card [this {:keys [title message]}]\n  (dom/div\n    (dom/div :.uk-card.uk-card-primary.uk-card-body\n             (dom/h3 :.uk-card-title title)\n             (dom/p message))))\n\n(def card-ui (comp/factory Card))\n\n(defsc Root [this props]\n  (dom/div\n    (dom/div\n      {:uk-grid \"\"\n       :class \"uk-child-width-1-3@m uk-grid-small uk-grid-match\"\n       :uk-sortable \"handle: .uk-card\"}\n      (doall (for [card cards] (card-ui card))))\n    (dom/div\n      :.uk-overlay.uk-overlay-primary.uk-position-bottom\n      (dom/button :.uk-button.uk-button-primary \"Create\"))))\n\n(defn ^:export init\n  \"Shadow-cljs sets this up to be our entry-point function. See shadow-cljs.edn `:init-fn` in the modules of the main build.\"\n  []\n  (app/mount! app Root \"app\")\n  (js/console.log \"Loaded\"))\n\n(defn ^:export refresh\n  \"During development, shadow-cljs will call this on every hot reload of source. See shadow-cljs.edn\"\n  []\n  ;; re-mounting will cause forced UI refresh, update internals, etc.\n  (app/mount! app Root \"app\")\n  ;; As of Fulcro 3.3.0, this addition will help with stale queries when using dynamic routing:\n  (comp/refresh-dynamic-queries! app)\n  (js/console.log \"Hot reload\"))\n"]}